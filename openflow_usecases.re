= OpenFlow のユースケース

OpenFlow には「ソフトウェアさえ書けば、ほぼどんなネットワーク機器にも化けられる」という特長があります。乱暴に言うと OpenFlow はスイッチの制御をソフトウェアとして分離しただけですので、コントローラを実装しさえすればルータやロードバランサ、ファイアウォールなど何でもできてしまいます。もちろんこの場合、スイッチ機能の一部がソフトウェアになるので性能は落ちます。しかし、ほぼ何でもできることには変わりありません。

この何でもできるという特長は、元々は大学や研究所などアカデミアからの要求によって生まれたものでした。今までのスイッチやルータにとらわれない、まったく新しいネットワークを研究したい。でもすでにあるスイッチやルータのファームウェアを改造するのは大変…このジレンマを解消するのが OpenFlow だったわけです。アカデミアは最初、大規模な仮想ネットワークを構築してその中で研究するつもりでした。しかしその方法では環境の構築に莫大なお金がかかってしまいますし、ネットワークを流れるトラフィックも実環境とはほど遠くなってしまいます。そこに、彗星のように登場したのが OpenFlow だったのです。

では、もともとはアカデミア発の OpenFlow が現在のように産業界で注目されるようになった理由は何でしょうか？@<chap>{whats_openflow}でも触れましたが、主な理由は次の 3 つです。

 1. OpenFlow はスイッチの価格破壊をもたらします。コントローラに命令されるだけの単純な OpenFlow スイッチは新興スイッチベンダにも簡単に作れますし、大量生産に乗せやすいので安く作れます。このおかげで、たとえばデータセンターのようなスイッチを大量につないだ設備を従来よりもずっと安く構築できます。
 2. OpenFlow で作ったネットワークは、既存のシステムとの連携がしやすくなります。データセンターのジョブ管理やスケジューラ、職場の業務システムとコントローラをつなげば、既存システムと連携した高度なネットワーク制御のできあがりです。
 3. OpenFlow でしかできないことも少なからずあります。今までの分散型ネットワークでは苦手だった全体最適化が、OpenFlow の集中管理でできるようになるからです。ネットワーク全体を制御する神様であるコントローラが集中管理するおかげで、分散での局所最適化的な管理が全体最適化ができます。

この 2 と 3 をふまえ「OpenFlow でうまく行く」具体的なユースケースを見ていくことで、OpenFlow 活用のイメージをふくらませましょう。

== サーバの負荷を分散する
== スイッチの負荷を分散する
== VM を移動する
== 帯域をかせぐ
== セキュアなネットワークを作る

== まとめ

